<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd"><!-- Generated by Sonar -->
<module name="Checker">
    <module name="SuppressWarningsFilter"/>
    <module name="TreeWalker">
        <module name="SuppressWarningsHolder"/>
        <module name="ArrayTypeStyle">
            <property name="severity" value="error"/>
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="severity" value="error"/>
            <property name="allowIfAllCharactersEscaped" value="false"/>
            <property name="allowNonPrintableEscapes" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowEscapesForControlCharacters" value="true"/>
        </module>
        <module name="AvoidStarImport">
            <property name="severity" value="error"/>
            <property name="allowStaticMemberImports" value="false"/>
            <property name="allowClassImports" value="false"/>
        </module>
        <module name="BooleanExpressionComplexity">
            <property name="severity" value="warning"/>
            <property name="max" value="5"/>
            <property name="tokens" value="LAND,BAND,LOR,BOR,BXOR"/>
        </module>
        <module name="CatchParameterName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="severity" value="error"/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="CommentsIndentation">
            <property name="severity" value="error"/>
            <property name="tokens" value="SINGLE_LINE_COMMENT,BLOCK_COMMENT_BEGIN"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="severity" value="error"/>
            <property name="switchBlockAsSingleDecisionPoint" value="false"/>
            <property name="max" value="10"/>
            <property name="tokens"
                      value="LITERAL_WHILE,LITERAL_DO,LITERAL_FOR,LITERAL_IF,LITERAL_SWITCH,LITERAL_CASE,LITERAL_CATCH,QUESTION,LAND,LOR"/>
        </module>
        <module name="DeclarationOrder">
            <property name="severity" value="error"/>
            <property name="ignoreModifiers" value="false"/>
            <property name="ignoreConstructors" value="false"/>
        </module>
        <module name="EmptyBlock">
            <property name="severity" value="error"/>
            <property name="tokens" value="LITERAL_TRY,LITERAL_FINALLY,LITERAL_IF,LITERAL_ELSE,LITERAL_SWITCH"/>
            <property name="option" value="text"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="severity" value="error"/>
            <property name="exceptionVariableName" value="expected"/>
            <property name="commentFormat" value=".*"/>
        </module>
        <module name="EmptyLineSeparator">
            <property name="severity" value="warning"/>
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="true"/>
            <property name="tokens"
                      value="PACKAGE_DEF,IMPORT,CLASS_DEF,INTERFACE_DEF,ENUM_DEF,STATIC_INIT,INSTANCE_INIT,METHOD_DEF,CTOR_DEF,VARIABLE_DEF"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="true"/>
        </module>
        <module name="EmptyStatement">
            <property name="severity" value="info"/>
        </module>
        <module name="EqualsAvoidNull">
            <property name="severity" value="error"/>
            <property name="ignoreEqualsIgnoreCase" value="false"/>
        </module>
        <module name="FallThrough">
            <property name="severity" value="error"/>
        </module>
        <module name="FinalLocalVariable">
            <property name="severity" value="warning"/>
            <property name="validateEnhancedForLoopVariable" value="false"/>
            <property name="tokens" value="VARIABLE_DEF"/>
        </module>
        <module name="GenericWhitespace">
            <property name="severity" value="error"/>
        </module>
        <module name="IllegalThrows">
            <property name="severity" value="error"/>
            <property name="ignoreOverriddenMethods" value="true"/>
        </module>
        <module name="IllegalTokenText">
            <property name="severity" value="warning"/>
            <property name="ignoreCase" value="true"/>
            <property name="format" value="^0[^lx]"/>
            <property name="tokens" value="STRING_LITERAL,CHAR_LITERAL"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="severity" value="error"/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="LeftCurly">
            <property name="severity" value="warning"/>
            <property name="ignoreEnums" value="true"/>
            <property name="maxLineLength" value="160"/>
            <property name="tokens"
                      value="INTERFACE_DEF,CLASS_DEF,ANNOTATION_DEF,ENUM_DEF,CTOR_DEF,METHOD_DEF,ENUM_CONSTANT_DEF,LITERAL_WHILE,LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,LITERAL_SYNCHRONIZED,LITERAL_SWITCH,LITERAL_DO,LITERAL_IF,LITERAL_ELSE,LITERAL_FOR,STATIC_INIT,OBJBLOCK"/>
            <property name="option" value="eol"/>
        </module>
        <module name="LineLength">
            <property name="severity" value="error"/>
            <property name="max" value="160"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
            <property name="tabWidth" value="8"/>
        </module>
        <module name="LocalVariableName">
            <property name="severity" value="warning"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
        </module>
        <module name="MemberName">
            <property name="severity" value="warning"/>
            <property name="applyToPackage" value="true"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPrivate" value="true"/>
        </module>
        <module name="MethodLength">
            <property name="severity" value="error"/>
            <property name="max" value="50"/>
            <property name="countEmpty" value="true"/>
            <property name="tokens" value="METHOD_DEF,CTOR_DEF"/>
        </module>
        <module name="MethodLength">
            <property name="severity" value="warning"/>
            <property name="max" value="60"/>
            <property name="countEmpty" value="true"/>
            <property name="tokens" value="METHOD_DEF,CTOR_DEF"/>
        </module>
        <module name="MethodName">
            <property name="severity" value="error"/>
            <property name="allowClassName" value="false"/>
            <property name="applyToPackage" value="true"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToPrivate" value="true"/>
            <property name="applyToProtected" value="true"/>
        </module>
        <module name="MethodParamPad">
            <property name="severity" value="warning"/>
            <property name="tokens"
                      value="CTOR_DEF,LITERAL_NEW,METHOD_CALL,METHOD_DEF,SUPER_CTOR_CALL,ENUM_CONSTANT_DEF"/>
            <property name="allowLineBreaks" value="false"/>
            <property name="option" value="nospace"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="severity" value="error"/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="MissingSwitchDefault">
            <property name="severity" value="error"/>
        </module>
        <module name="ModifierOrder">
            <property name="severity" value="error"/>
        </module>
        <module name="MultipleVariableDeclarations">
            <property name="severity" value="error"/>
        </module>
        <module name="NPathComplexity">
            <property name="severity" value="error"/>
            <property name="max" value="10"/>
        </module>
        <module name="NeedBraces">
            <property name="severity" value="warning"/>
            <property name="allowSingleLineStatement" value="false"/>
            <property name="allowEmptyLoopBody" value="false"/>
            <property name="tokens" value="LITERAL_DO,LITERAL_ELSE,LITERAL_FOR,LITERAL_IF,LITERAL_WHILE"/>
        </module>
        <module name="NestedForDepth">
            <property name="severity" value="error"/>
            <property name="max" value="2"/>
        </module>
        <module name="NestedIfDepth">
            <property name="severity" value="error"/>
            <property name="max" value="3"/>
        </module>
        <module name="NestedTryDepth">
            <property name="severity" value="error"/>
        </module>
        <module name="NoFinalizer">
            <property name="severity" value="error"/>
        </module>
        <module name="NoLineWrap">
            <property name="severity" value="warning"/>
            <property name="tokens" value="IMPORT,PACKAGE_DEF"/>
        </module>
        <module name="OneStatementPerLine">
            <property name="severity" value="error"/>
        </module>
        <module name="OneTopLevelClass">
            <property name="severity" value="error"/>
        </module>
        <module name="OperatorWrap">
            <property name="severity" value="warning"/>
            <property name="tokens"
                      value="BAND,BOR,BSR,BXOR,DIV,EQUAL,GE,GT,LAND,LE,LITERAL_INSTANCEOF,LOR,LT,MINUS,MOD,NOT_EQUAL,PLUS,QUESTION,SL,SR,STAR"/>
            <property name="option" value="nl"/>
        </module>
        <module name="OverloadMethodsDeclarationOrder">
            <property name="severity" value="error"/>
        </module>
        <module name="PackageName">
            <property name="severity" value="error"/>
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="ParameterName">
            <property name="severity" value="warning"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="ignoreOverridden" value="false"/>
            <property name="accessModifiers" value="public,protected,package,private"/>
        </module>
        <module name="RedundantModifier">
            <property name="severity" value="info"/>
            <property name="tokens"
                      value="METHOD_DEF,VARIABLE_DEF,ANNOTATION_FIELD_DEF,INTERFACE_DEF,CTOR_DEF,CLASS_DEF,ENUM_DEF"/>
        </module>
        <module name="ReturnCount">
            <property name="severity" value="error"/>
            <property name="maxForVoid" value="1"/>
            <property name="max" value="3"/>
            <property name="format" value="^equals$"/>
            <property name="tokens" value="CTOR_DEF,METHOD_DEF,LAMBDA"/>
        </module>
        <module name="SimplifyBooleanReturn">
            <property name="severity" value="error"/>
        </module>
        <module name="StringLiteralEquality">
            <property name="severity" value="warning"/>
        </module>
        <module name="TypeName">
            <property name="severity" value="warning"/>
            <property name="applyToPackage" value="true"/>
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF"/>
            <property name="applyToPublic" value="true"/>
            <property name="applyToProtected" value="true"/>
            <property name="applyToPrivate" value="true"/>
        </module>
        <module name="UnnecessaryParentheses">
            <property name="severity" value="error"/>
            <property name="tokens"
                      value="EXPR,IDENT,NUM_DOUBLE,NUM_FLOAT,NUM_INT,NUM_LONG,STRING_LITERAL,LITERAL_NULL,LITERAL_FALSE,LITERAL_TRUE,ASSIGN,BAND_ASSIGN,BOR_ASSIGN,BSR_ASSIGN,BXOR_ASSIGN,DIV_ASSIGN,MINUS_ASSIGN,MOD_ASSIGN,PLUS_ASSIGN,SL_ASSIGN,SR_ASSIGN,STAR_ASSIGN"/>
        </module>
        <module name="UnusedImports">
            <property name="severity" value="error"/>
            <property name="processJavadoc" value="true"/>
        </module>
        <module name="UpperEll">
            <property name="severity" value="error"/>
        </module>
        <module name="VariableDeclarationUsageDistance">
            <property name="severity" value="error"/>
            <property name="validateBetweenScopes" value="false"/>
            <property name="ignoreFinal" value="true"/>
            <property name="allowedDistance" value="3"/>
        </module>
        <module name="WhitespaceAround">
            <property name="severity" value="warning"/>
            <property name="allowEmptyConstructors" value="true"/>
            <property name="ignoreEnhancedForColon" value="true"/>
            <property name="allowEmptyLambdas" value="false"/>
            <property name="allowEmptyCatches" value="false"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="tokens"
                      value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,DO_WHILE,EQUAL,GE,GT,LAMBDA,LAND,LCURLY,LE,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND"/>
            <property name="allowEmptyTypes" value="true"/>
        </module>
        <module name="SuppressionCommentFilter"/>
    </module>
</module>
